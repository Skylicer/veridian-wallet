name: build-and-publish-docker-artifacts

###############################################################################
# WARNING:
# This workflow uses pull_request_target to allow building images from forks,
# this means that secrets are exposed and we should never run anything (ie tests)
# outside a sandbox (ie, docker containers) to prevent potential malicious code
# leaking the github actions secrets.
###############################################################################

on:
  push:
    branches:
      - main
      - 'release/**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request_target:
    types: [ opened, synchronize ]
    paths:
    - 'Earthfile'
    - '.github/workflows/docker-builds.yaml'
    - 'services/credential-server-ui/**'
    - 'services/credential-server/**'
  workflow_dispatch:
    inputs:
      images:
        description: 'Select which earthly targets to build and push'
        required: true
        default: 'all'
        type: choice
        options:
        - idw-keria
        - idw-witness
        - cred-issuance
        - cred-issuance-ui
        - cip45-sample-dapp
        - keria-passcode-gen
        - all

env:
  DOCKER_PUSH: true

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: set-matrix
        id: set-matrix
        run: |
          echo 'matrix={"platform":["linux/amd64","linux/arm64"]}' | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
  build-n-publish:
    needs: set-matrix
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup qemu for arm builds
        uses: docker/setup-qemu-action@v3
        if: matrix.platform == 'linux/arm64'
        with:
          platforms: arm64

      - name: â›® cf-gha-baseline
        uses: cardano-foundation/cf-gha-workflows/./actions/cf-gha-baseline@main
        id: cf-gha-baseline
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set docker image targets based on path changes from last commit
        id: metadata
        run: |
          set -x

          if [ ${{github.event_name}} == "workflow_dispatch" ]
          then
            case "${{ github.event.inputs.images }}" in
              idw-keria)
                DOCKER_IMAGES_TARGETS="idw-keria"
                ;;
              idw-witness)
                DOCKER_IMAGES_TARGETS="idw-witness"
                ;;
              cred-issuance)
                DOCKER_IMAGES_TARGETS="cred-issuance"
                ;;
              cred-issuance-ui)
                DOCKER_IMAGES_TARGETS="cred-issuance-ui"
                ;;
              cip45-sample-dapp)
                DOCKER_IMAGES_TARGETS="cip45-sample-dapp"
                ;;
              keria-passcode-gen)
                DOCKER_IMAGES_TARGETS="keria-passcode-gen"
                ;;
              all)
                DOCKER_IMAGES_TARGETS="idw-keria idw-witness cred-issuance cred-issuance-ui cip45-sample-dapp keria-passcode-gen"
                ;;
              *)
                echo "Invalid option, exiting..."
                exit 1
                ;;
            esac

            echo "DOCKER_IMAGES_TARGETS=${DOCKER_IMAGES_TARGETS}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
            echo "DOCKER_IMAGES_TARGETS_$(echo ${{ matrix.platform }} | sed 's|/|_|g')=${DOCKER_IMAGES_TARGETS}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
          fi
          
          if [ "$TRIGGERING_REF" == "pr" ]
          then

            if [ "$IS_PR_FROM_FORK" == "true" ]; then
              echo "External PR detected: fetching branch from $PR_HEAD_REPO"
              git fetch https://github.com/${PR_HEAD_REPO}.git "$PR_HEAD_REF"
              git checkout FETCH_HEAD
            else
              echo "Internal PR: checking out branch $PR_HEAD_REF"
            	git checkout ${BRANCH_NAME}
            fi
          fi